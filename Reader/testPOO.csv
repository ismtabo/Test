POO Bloque 1;; 10;; 1;; 0.33;; 0
El principio de acceso uniforme recomienda que:;;d;;0;;a)Todos los métodos tengan el mismo número de argumentos;;b)Se utilice un sólo concepto de módulo en todo el proceso de desarrollo;;c)Toda la documentación de una clase resida en la misma clase;;d)En los servicios de un módulo no se distinga entre consultas al almacenamiento y cálculo
La principal ventaja de la reutilización de código es:;;c;;0;;a)Ahorra tiempo de programador al evitar la copia de código en varios ficheros;;b)Ahorra memoria al evitar la copia de código en varios ficheros;;c)Facilita las tareas de mantenimiento del código;;d)En realidad la reutilización de código no presenta ninguna ventaja
En Java; el papel de un método <<constructor>> es...;;b;;0;;a)construir un objeto;;b)inicializar un objeto;;c)construir e inicializar un objeto;;d)inicializar un paquete
En las funciones Java todos los parámetros son...;;a;;0;;a)parámetros por valor;;b)parámetros por variable;;c)parámetros por valor; salvo si van precedidos del modificador var;;d)parámetros por variable; salvo si van precedidos del modificador protected
En Java; para eliminar un objeto...;;a;;0;;a)no hacemos nada. Los objetos son eliminador por el <<recolector de basura>> cuando no son necesarios.;;b)debemos hacer una llamada al método dispose del objeto;;c)debemos hacer una llamada al método dispose de la clase Object;;d)en realidad; una vez creado; un objeto no puede desaparecer de memoria.
Una referencia:;;b;;0;;a)Siempre está conectada a un objeto único;;b)Puede estar vacía (null) o conectada a un objeto;;c)Es una forma de almacenar una posición de memoria;;d)Siempre apunta a un dato de un tipo básico del lenguaje
En POO llamamos entidad a:;;d;;0;;a)Un atributo de una clase;;b)Una entidad local definida en un método;;c)Un argumento formal de un método;;d)Todos los anteriores son entidades
Decimos que una clase A es cliente de B cuando...;;b;;0;;a)B dispone de alguna entidad declarada como de tipo A;;b)A dispone de alguna entidad declarada como de tipo B;;c)A importa explícitamente la clase V;;d)Una clase sólo puede ser cliente de un paquete
La información que escribimos e formato <<Javadoc>> dentro de una clase;;a;;0;;a)Está dirigida a los programadores que usen esa clase;;b)Está dirigida a los programadores que mantengan esa clase;;c)Está dirigida a los usuarios del sistema informático que incorpora esa clase;;d)En realidad no hay ningún motivo para escribir documentación en formato <<Javadoc>>
Si en el código Java de una clase vemos this.a =;;c;;0;;a) Es normal; sólo puedo acceder a los atributos mediante this;;b)Es recomendable acceder a todos los atributos mediante this;;c)Sólo tiene sentido si pretendemos distinguir un atributo a de un argumento formal o entidad local a;;d)Es un error sintáctico. this no tiene un significad especial en Java
Cuando hacemos referencia al principio de elección única; nos referimos a que:;;a;;0;;a)Si existen un conjunto de alternativas; un módulo y sólo uno conocerá la lista completa;;b)Sólo una clase es responsable de determinar las clases que es necesario importar para su compilación;;c)No definiremos en ningún caso un método de una clase que actúe como comando y como consulta simultáneamente;;d)Debemos evitar a toda costa la duplicidad de código
En Java; para crear un objeto...;;a;;0;;a)realizamos una creación explícita mediante new;;b)no debemos hacer nada; la creación está implicita en la declaración de las entidades;;c)sólo debemos hacer una creación explícita si es una instancia de una clase de biblioteca;;d)no debemos hacer una creación explícita si es una instancia de una clase de biblioteca
En un código Java hemos declarado dos instancias a; b de tipo Alumno. Tras las sentencias a=b; a.aprueba(); y suponiendo que el método aprueba() cambia el estado de un alumno aprobado; podremos decir que...;;d;;0;;a)a está aprobado;;b)b está aprobado;;c)a y b están aprobados;;d)a y b están aprobados; salvo si antes de la ejecución del código b era null
Siguiendo los principios de la orientación a Objetos; declaremos un atributo privado (private) en Java...;;d;;0;;a)cuando deseemos ocultar el dato que almacena a nuestros clientes;;b)cuando represente una información interna de la clase;;c)cuando no deseemos que nuestros clientes alteren el valor del atributo;;d)en cualquier caso
